#include <bits/stdc++.h>
using namespace std;
#define ll long long int


int main() {
     string str;
    ifstream MyReadFile("inputf.in");
    while (getline (MyReadFile, str)) {
    string str2="";
    string str3="";
    ll j=0;
    for(ll i=0;i<str.length();i++){
        if(str[i] == ' '){
             break;
             j=i;
        }
        else{
            str3=str3+str[i];
        }
    }
      ll k;
    if(str3=="addi"){
        str2=str2+"001000";
        for(ll i=j+1;i<str.length();i++){
               if(str[i]=='$'){
              str3="";
          }
          
          else if(str[i]==','){
              ll y;
                  stringstream ss;
       ss<<str3;
       ss>>y;
                str2=str2+bitset<5>(y).to_string();
                k=i;
               }
               else{
               str3=str3+str[i];
           }
        }
        string str4="";
        for(ll i=k+1;i<str.length();i++){
            str4=str4+str[i];
        }
        int x;
       stringstream ss;
       ss<<str4;
       ss>>x;
        str2=str2+bitset<16>(x).to_string();
    }
    if((str3=="add")||(str3=="mult")){
        str2=str2+"000000";
        string str5=str3;
        for(ll i=j+1;i<str.length();i++){
               if(str[i]=='$'){
              str3="";
          }
          
          else if(str[i]==','){
              ll y;
                  stringstream ss;
       ss<<str3;
       ss>>y;
                str2=str2+bitset<5>(y).to_string();
                k=i;
               }
               else{
               str3=str3+str[i];
           }
        }
        string str4="";
        for(ll i=k+2;i<str.length();i++){
            str4=str4+str[i];
        }
        int x;
       stringstream ss;
       ss<<str4;
       ss>>x;
        str2=str2+bitset<5>(x).to_string();
        str2=str2+bitset<5>(0).to_string();
        if(str5=="add"){
            str2=str2+bitset<6>(32).to_string();
        }
        if(str5=="mult"){
            str2=str2+bitset<6>(24).to_string();
        }
    }
    if(str3=="beq"){
         str2=str2+"000100";
        string str5=str3;
        for(ll i=j+1;i<str.length();i++){
               if(str[i]=='$'){
              str3="";
          }
          
          else if(str[i]==','){
              ll y;
                  stringstream ss;
       ss<<str3;
       ss>>y;
                str2=str2+bitset<5>(y).to_string();
                k=i;
               }
               else{
               str3=str3+str[i];
           }
        }
        string str4="";
        for(ll i=k+1;i<str.length();i++){
            str4=str4+str[i];
        }
         ll p=0;
         ll k=0;
         string str8;
         ifstream myReadFile("inputf.in");
    while (getline (myReadFile, str8)) {
        if(str8==str4){
            k=1;
            break;
        }
        p++;
    }
    if(k==0){
    int x;
       stringstream ss;
       ss<<str4;
       ss>>x;
       str2=str2+bitset<16>(x/4).to_string();
       }
    
else{
        str2=str2+bitset<16>(p).to_string();
    }
        
    }
    if(str3=="j"){
        str2=str2+"000010";
        string str4="";
        for(ll i=j+2;i<str.length();i++){
            str4=str4+str[i];
        }
        ll p=0;
         ll k=0;
         string str8;
         ifstream myReadFile("inputf.in");
    while (getline (myReadFile, str8)) {
        if(str8==str4){
            k=1;
            break;
        }
        p++;
    }
    if(k==0){
    int x;
       stringstream ss;
       ss<<str4;
       ss>>x;
       str2=str2+bitset<26>(x/4).to_string();
       }
    
else{
        str2=str2+bitset<26>(p).to_string();
    }
        
    }
    if(str2!=""){
    cout<<str2<<endl;
}
}
    return 0;
}


input:

addi $1,$0,1
addi $10,$0,1
addi $2,$0,6
loop
beq $1,$2,end 
mult $10,$10,$1
addi $1,$1,1
j loop
end



output:

00100000001000000000000000000001
00100001010000000000000000000001
00100000010000000000000000000110
00010000001000100000000000000000
00000001010010100000100000011000
00100000001000010000000000000001
00001000000000000000000000000011
